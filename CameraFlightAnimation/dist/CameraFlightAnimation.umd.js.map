{"version":3,"file":"CameraFlightAnimation.umd.js","sources":["../node_modules/@lijuhong1981/jsmath/src/Constant.js","../node_modules/@lijuhong1981/jsmath/src/convertToRange.js","../node_modules/@lijuhong1981/jsmath/src/convertToRadiansCircular.js","../index.js"],"sourcesContent":["const PI = Math.PI;\r\nconst ONE_OVER_PI = 1.0 / PI;\r\nconst PI_OVER_TWO = PI / 2.0;\r\nconst PI_OVER_THREE = PI / 3.0;\r\nconst PI_OVER_FOUR = PI / 4.0;\r\nconst PI_OVER_SIX = PI / 6.0;\r\nconst THREE_PI_OVER_TWO = (3.0 * PI) / 2.0;\r\nconst TWO_PI = 2.0 * PI;\r\nconst ONE_OVER_TWO_PI = 1.0 / (2.0 * PI);\r\nconst RADIANS_PER_DEGREE = PI / 180.0;\r\nconst DEGREES_PER_RADIAN = 180.0 / PI;\r\n/**\r\n * The number of radians in an arc second.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nconst RADIANS_PER_ARCSECOND = RADIANS_PER_DEGREE / 3600.0;\r\n\r\n/**\r\n * 0.1\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON1 = 0.1;\r\n\r\n/**\r\n * 0.01\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON2 = 0.01;\r\n\r\n/**\r\n * 0.001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON3 = 0.001;\r\n\r\n/**\r\n * 0.0001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON4 = 0.0001;\r\n\r\n/**\r\n * 0.00001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON5 = 0.00001;\r\n\r\n/**\r\n * 0.000001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON6 = 0.000001;\r\n\r\n/**\r\n * 0.0000001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON7 = 0.0000001;\r\n\r\n/**\r\n * 0.00000001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON8 = 0.00000001;\r\n\r\n/**\r\n * 0.000000001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON9 = 0.000000001;\r\n\r\n/**\r\n * 0.0000000001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON10 = 0.0000000001;\r\n\r\n/**\r\n * 0.00000000001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON11 = 0.00000000001;\r\n\r\n/**\r\n * 0.000000000001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON12 = 0.000000000001;\r\n\r\n/**\r\n * 0.0000000000001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON13 = 0.0000000000001;\r\n\r\n/**\r\n * 0.00000000000001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON14 = 0.00000000000001;\r\n\r\n/**\r\n * 0.000000000000001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON15 = 0.000000000000001;\r\n\r\n/**\r\n * 0.0000000000000001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON16 = 0.0000000000000001;\r\n\r\n/**\r\n * 0.00000000000000001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON17 = 0.00000000000000001;\r\n\r\n/**\r\n * 0.000000000000000001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON18 = 0.000000000000000001;\r\n\r\n/**\r\n * 0.0000000000000000001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON19 = 0.0000000000000000001;\r\n\r\n/**\r\n * 0.00000000000000000001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON20 = 0.00000000000000000001;\r\n\r\n/**\r\n * 0.000000000000000000001\r\n * @type {Number}\r\n * @constant\r\n */\r\nconst EPSILON21 = 0.000000000000000000001;\r\n\r\nexport {\r\n    PI,\r\n    ONE_OVER_PI,\r\n    PI_OVER_TWO,\r\n    PI_OVER_THREE,\r\n    PI_OVER_FOUR,\r\n    PI_OVER_SIX,\r\n    THREE_PI_OVER_TWO,\r\n    TWO_PI,\r\n    ONE_OVER_TWO_PI,\r\n    RADIANS_PER_DEGREE,\r\n    DEGREES_PER_RADIAN,\r\n    RADIANS_PER_ARCSECOND,\r\n    EPSILON1,\r\n    EPSILON2,\r\n    EPSILON3,\r\n    EPSILON4,\r\n    EPSILON5,\r\n    EPSILON6,\r\n    EPSILON7,\r\n    EPSILON8,\r\n    EPSILON9,\r\n    EPSILON10,\r\n    EPSILON11,\r\n    EPSILON12,\r\n    EPSILON13,\r\n    EPSILON14,\r\n    EPSILON15,\r\n    EPSILON16,\r\n    EPSILON17,\r\n    EPSILON18,\r\n    EPSILON19,\r\n    EPSILON20,\r\n    EPSILON21,\r\n};","/**\r\n * 将一个数值转换至两个数值范围内\r\n * 如不在范围内则累加或累减范围长度，直至落在范围内\r\n * @param {Number} value 需要转换的数值\r\n * @param {Number} rangeMinimum 较小数\r\n * @param {Number} rangeMaximum 较大数\r\n * @returns {Number} 转换后的数值\r\n */\r\nfunction convertToRange(value, rangeMinimum, rangeMaximum) {\r\n    const length = rangeMaximum - rangeMinimum;\r\n    if (value < rangeMinimum) {\r\n        value += length;\r\n        while (value < rangeMinimum)\r\n            value += length;\r\n    } else if (value > rangeMaximum) {\r\n        value -= length;\r\n        while (value > rangeMaximum)\r\n            value -= length;\r\n    }\r\n    return value;\r\n};\r\n\r\nexport default convertToRange;\r\nexport { convertToRange };","import convertToRange from \"./convertToRange.js\";\r\nimport { TWO_PI } from \"./Constant.js\";\r\n\r\n/**\r\n * 转换一个弧度至一个圆周范围内\r\n * @param {Number} radians 需要转换的弧度\r\n * @param {Number} minValue 圆周起始弧度，默认0\r\n * @returns {Number} 转换后的弧度\r\n */\r\nfunction convertToRadiansCircular(radians, minValue = 0) {\r\n    return convertToRange(radians, minValue, minValue + TWO_PI);\r\n};\r\n\r\nexport default convertToRadiansCircular;\r\nexport { convertToRadiansCircular };","import { PI, TWO_PI } from \"@lijuhong1981/jsmath/src/Constant.js\";\r\nimport convertToRadiansCircular from \"@lijuhong1981/jsmath/src/convertToRadiansCircular.js\";\r\n\r\nexport default function (THREE, TWEEN) {\r\n\r\n    /**\r\n     * 相机飞行动画插件\r\n    */\r\n    class CameraFlightAnimation {\r\n        /**\r\n         * @constructor\r\n         * @param {THREE.Camera} camera Camera对象，参见{@link https://threejs.org/docs/?q=Camera#api/en/cameras/Camera}\r\n         */\r\n        constructor(camera) {\r\n            this.camera = camera;\r\n        }\r\n\r\n        /**\r\n         * 是否飞行中\r\n         * @returns {boolean}\r\n         */\r\n        get isFlighting() {\r\n            return this._flightTween ? true : false;\r\n        }\r\n\r\n        /**\r\n         * 取消飞行\r\n         * @returns {void}\r\n         */\r\n        cancelFlight() {\r\n            if (this._flightTween) {\r\n                this._flightTween.stop();\r\n                delete this._flightTween;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 飞行至传入的配置项\r\n         * @param {object} options 配置项\r\n         * @param {THREE.Vector3} position 飞行结束位置，Vector3对象，参见{@link https://threejs.org/docs/?q=vec#api/en/math/Vector3}\r\n         * @param {THREE.Euler} rotation 飞行结束时的旋转欧拉角，与quaternion二选一，Euler对象，参见{@link https://threejs.org/docs/?q=eul#api/en/math/Euler}\r\n         * @param {THREE.Quaternion} quaternion 飞行结束时的旋转四元数，与rotation二选一，Quaternion对象，参见{@link https://threejs.org/docs/?q=qua#api/en/math/Quaternion}\r\n         * @param {number|undefined} duration 飞行持续时间，单位秒，默认3.0，如果值小于或等于0，则会跳过飞行动画，直接去到目标位置和旋转角度\r\n         * @param {number|undefined} delay 飞行开始延迟时间，单位秒，默认0.0\r\n         * @param {Function|undefined} update 飞行动画帧更新时的回调通知函数\r\n         * @param {Function|undefined} complete 飞行结束时的回调通知函数\r\n         * @param {TWEEN.Easing|undefined} easing 飞行所使用的TWEEN动画，默认使用TWEEN.Easing.Linear.None，参见{@link https://github.com/tweenjs/tween.js/blob/main/docs/user_guide.md#available-easing-functions}\r\n         * @returns {void}\r\n         * @note position、rotation、quaternion 三者必须设置一个才能启动飞行\r\n         */\r\n        flyTo(options = {}) {\r\n            if (options.quaternion)\r\n                options.rotation = new THREE.Euler().setFromQuaternion(options.quaternion);\r\n            if (!options.position && !options.rotation) {\r\n                console.warn('The position or rotation must be require.');\r\n                return;\r\n            }\r\n            //取消当前的飞行动画\r\n            this.cancelFlight();\r\n            let source = {},\r\n                target = {};\r\n            if (options.position) {\r\n                //记录当前位置\r\n                source.positionX = this.camera.position.x;\r\n                source.positionY = this.camera.position.y;\r\n                source.positionZ = this.camera.position.z;\r\n                //记录目标位置\r\n                target.positionX = options.position.x;\r\n                target.positionY = options.position.y;\r\n                target.positionZ = options.position.z;\r\n            }\r\n            if (options.rotation) {\r\n                //记录当前角度\r\n                source.rotationX = convertToRadiansCircular(this.camera.rotation.x, -PI);\r\n                source.rotationY = convertToRadiansCircular(this.camera.rotation.y, -PI);\r\n                source.rotationZ = convertToRadiansCircular(this.camera.rotation.z, -PI);\r\n                //记录目标角度\r\n                target.rotationX = convertToRadiansCircular(options.rotation.x, -PI);\r\n                target.rotationY = convertToRadiansCircular(options.rotation.y, -PI);\r\n                target.rotationZ = convertToRadiansCircular(options.rotation.z, -PI);\r\n\r\n                if (Math.abs(source.rotationX - target.rotationX) > PI) {\r\n                    if (source.rotationX > target.rotationX)\r\n                        target.rotationX += TWO_PI;\r\n                    else if (source.rotationX < target.rotationX)\r\n                        target.rotationX -= TWO_PI;\r\n                }\r\n                if (Math.abs(source.rotationY - target.rotationY) > PI) {\r\n                    if (source.rotationY > target.rotationY)\r\n                        target.rotationY += TWO_PI;\r\n                    else if (source.rotationY < target.rotationY)\r\n                        target.rotationY -= TWO_PI;\r\n                }\r\n                if (Math.abs(source.rotationZ - target.rotationZ) > PI) {\r\n                    if (source.rotationZ > target.rotationZ)\r\n                        target.rotationZ += TWO_PI;\r\n                    else if (source.rotationZ < target.rotationZ)\r\n                        target.rotationZ -= TWO_PI;\r\n                }\r\n            }\r\n\r\n            const duration = (options.duration ?? 3.0) * 1000;\r\n            if (duration <= 0) {\r\n                if (options.position)\r\n                    this.camera.position.set(target.positionX, target.positionY, target.positionZ);\r\n                if (options.rotation)\r\n                    this.camera.rotation.set(target.rotationX, target.rotationY, target.rotationZ);\r\n                this.camera.matrixWorldNeedsUpdate = true;\r\n                if (typeof options.complete === 'function')\r\n                    options.complete(this);\r\n                return;\r\n            }\r\n            const easing = (options.easing ?? TWEEN.Easing.Linear.None);\r\n            const delay = (options.delay ?? 0) * 1000;\r\n            this._flightTween = new TWEEN.Tween(source).to(target, duration)\r\n                .easing(easing) // Use an easing function to make the animation smooth.\r\n                .delay(delay)\r\n                .onUpdate(() => {\r\n                    if (options.position)\r\n                        this.camera.position.set(source.positionX, source.positionY, source.positionZ);\r\n                    if (options.rotation)\r\n                        this.camera.rotation.set(source.rotationX, source.rotationY, source.rotationZ);\r\n                    this.camera.matrixWorldNeedsUpdate = true;\r\n                    if (typeof options.update === 'function')\r\n                        options.update(this);\r\n                }).onComplete(() => {\r\n                    delete this._flightTween;\r\n                    if (typeof options.complete === 'function')\r\n                        options.complete(this);\r\n                }).start() // Start the tween immediately.\r\n        }\r\n\r\n        /**\r\n         * 设置相机视图，等同于duration<=0的flyTo\r\n         * @param {object} options 配置项，参见{@link flyTo}\r\n         * @returns {void}\r\n         */\r\n        setView(options = {}) {\r\n            options.duration = 0;\r\n            this.flyTo(options);\r\n        }\r\n    };\r\n\r\n    return CameraFlightAnimation;\r\n\r\n};"],"names":[],"mappings":";;;;;;IAAA,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;IAOnB,MAAM,MAAM,GAAG,GAAG,GAAG,EAAE;;ICPvB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,cAAc,CAAC,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE;IAC3D,IAAI,MAAM,MAAM,GAAG,YAAY,GAAG,YAAY,CAAC;IAC/C,IAAI,IAAI,KAAK,GAAG,YAAY,EAAE;IAC9B,QAAQ,KAAK,IAAI,MAAM,CAAC;IACxB,QAAQ,OAAO,KAAK,GAAG,YAAY;IACnC,YAAY,KAAK,IAAI,MAAM,CAAC;IAC5B,KAAK,MAAM,IAAI,KAAK,GAAG,YAAY,EAAE;IACrC,QAAQ,KAAK,IAAI,MAAM,CAAC;IACxB,QAAQ,OAAO,KAAK,GAAG,YAAY;IACnC,YAAY,KAAK,IAAI,MAAM,CAAC;IAC5B,KAAK;IACL,IAAI,OAAO,KAAK,CAAC;IACjB;;ICjBA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,wBAAwB,CAAC,OAAO,EAAE,QAAQ,GAAG,CAAC,EAAE;IACzD,IAAI,OAAO,cAAc,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,GAAG,MAAM,CAAC,CAAC;IAChE;;ICRe,cAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;AACvC;IACA;IACA;IACA;IACA,IAAI,MAAM,qBAAqB,CAAC;IAChC;IACA;IACA;IACA;IACA,QAAQ,WAAW,CAAC,MAAM,EAAE;IAC5B,YAAY,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACjC,SAAS;AACT;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,WAAW,GAAG;IAC1B,YAAY,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,KAAK,CAAC;IACpD,SAAS;AACT;IACA;IACA;IACA;IACA;IACA,QAAQ,YAAY,GAAG;IACvB,YAAY,IAAI,IAAI,CAAC,YAAY,EAAE;IACnC,gBAAgB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IACzC,gBAAgB,OAAO,IAAI,CAAC,YAAY,CAAC;IACzC,aAAa;IACb,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,KAAK,CAAC,OAAO,GAAG,EAAE,EAAE;IAC5B,YAAY,IAAI,OAAO,CAAC,UAAU;IAClC,gBAAgB,OAAO,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC3F,YAAY,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;IACxD,gBAAgB,OAAO,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;IAC1E,gBAAgB,OAAO;IACvB,aAAa;IACb;IACA,YAAY,IAAI,CAAC,YAAY,EAAE,CAAC;IAChC,YAAY,IAAI,MAAM,GAAG,EAAE;IAC3B,gBAAgB,MAAM,GAAG,EAAE,CAAC;IAC5B,YAAY,IAAI,OAAO,CAAC,QAAQ,EAAE;IAClC;IACA,gBAAgB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC1D,gBAAgB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC1D,gBAAgB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC1D;IACA,gBAAgB,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtD,gBAAgB,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtD,gBAAgB,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtD,aAAa;IACb,YAAY,IAAI,OAAO,CAAC,QAAQ,EAAE;IAClC;IACA,gBAAgB,MAAM,CAAC,SAAS,GAAG,wBAAwB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACzF,gBAAgB,MAAM,CAAC,SAAS,GAAG,wBAAwB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACzF,gBAAgB,MAAM,CAAC,SAAS,GAAG,wBAAwB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACzF;IACA,gBAAgB,MAAM,CAAC,SAAS,GAAG,wBAAwB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACrF,gBAAgB,MAAM,CAAC,SAAS,GAAG,wBAAwB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACrF,gBAAgB,MAAM,CAAC,SAAS,GAAG,wBAAwB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACrF;IACA,gBAAgB,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE;IACxE,oBAAoB,IAAI,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS;IAC3D,wBAAwB,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC;IACnD,yBAAyB,IAAI,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS;IAChE,wBAAwB,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC;IACnD,iBAAiB;IACjB,gBAAgB,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE;IACxE,oBAAoB,IAAI,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS;IAC3D,wBAAwB,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC;IACnD,yBAAyB,IAAI,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS;IAChE,wBAAwB,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC;IACnD,iBAAiB;IACjB,gBAAgB,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE;IACxE,oBAAoB,IAAI,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS;IAC3D,wBAAwB,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC;IACnD,yBAAyB,IAAI,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS;IAChE,wBAAwB,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC;IACnD,iBAAiB;IACjB,aAAa;AACb;IACA,YAAY,MAAM,QAAQ,GAAG,CAAC,OAAO,CAAC,QAAQ,IAAI,GAAG,IAAI,IAAI,CAAC;IAC9D,YAAY,IAAI,QAAQ,IAAI,CAAC,EAAE;IAC/B,gBAAgB,IAAI,OAAO,CAAC,QAAQ;IACpC,oBAAoB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;IACnG,gBAAgB,IAAI,OAAO,CAAC,QAAQ;IACpC,oBAAoB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;IACnG,gBAAgB,IAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,IAAI,CAAC;IAC1D,gBAAgB,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;IAC1D,oBAAoB,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC3C,gBAAgB,OAAO;IACvB,aAAa;IACb,YAAY,MAAM,MAAM,IAAI,OAAO,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACxE,YAAY,MAAM,KAAK,GAAG,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC;IACtD,YAAY,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;IAC5E,iBAAiB,MAAM,CAAC,MAAM,CAAC;IAC/B,iBAAiB,KAAK,CAAC,KAAK,CAAC;IAC7B,iBAAiB,QAAQ,CAAC,MAAM;IAChC,oBAAoB,IAAI,OAAO,CAAC,QAAQ;IACxC,wBAAwB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;IACvG,oBAAoB,IAAI,OAAO,CAAC,QAAQ;IACxC,wBAAwB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;IACvG,oBAAoB,IAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,IAAI,CAAC;IAC9D,oBAAoB,IAAI,OAAO,OAAO,CAAC,MAAM,KAAK,UAAU;IAC5D,wBAAwB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7C,iBAAiB,CAAC,CAAC,UAAU,CAAC,MAAM;IACpC,oBAAoB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7C,oBAAoB,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;IAC9D,wBAAwB,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC/C,iBAAiB,CAAC,CAAC,KAAK,GAAE;IAC1B,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,OAAO,CAAC,OAAO,GAAG,EAAE,EAAE;IAC9B,YAAY,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;IACjC,YAAY,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAChC,SAAS;IACT,KACA;IACA,IAAI,OAAO,qBAAqB,CAAC;AACjC;IACA;;;;;;;;","x_google_ignoreList":[0,1,2]}