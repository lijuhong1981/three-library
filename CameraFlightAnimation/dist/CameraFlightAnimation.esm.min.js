const t=Math.PI,o=2*t;function i(t,i=0){return function(t,o,i){const n=i-o;if(t<o)for(t+=n;t<o;)t+=n;else if(t>i)for(t-=n;t>i;)t-=n;return t}(t,i,i+o)}function n(n,a){return class{constructor(t){this.camera=t}get isFlighting(){return!!this._flightTween}cancelFlight(){this._flightTween&&(this._flightTween.stop(),delete this._flightTween)}flyTo(r={}){if(r.quaternion&&(r.rotation=(new n.Euler).setFromQuaternion(r.quaternion)),!r.position&&!r.rotation)return void console.warn("The position or rotation must be require.");this.cancelFlight();let e={},s={};r.position&&(e.positionX=this.camera.position.x,e.positionY=this.camera.position.y,e.positionZ=this.camera.position.z,s.positionX=r.position.x,s.positionY=r.position.y,s.positionZ=r.position.z),r.rotation&&(e.rotationX=i(this.camera.rotation.x,-t),e.rotationY=i(this.camera.rotation.y,-t),e.rotationZ=i(this.camera.rotation.z,-t),s.rotationX=i(r.rotation.x,-t),s.rotationY=i(r.rotation.y,-t),s.rotationZ=i(r.rotation.z,-t),Math.abs(e.rotationX-s.rotationX)>t&&(e.rotationX>s.rotationX?s.rotationX+=o:e.rotationX<s.rotationX&&(s.rotationX-=o)),Math.abs(e.rotationY-s.rotationY)>t&&(e.rotationY>s.rotationY?s.rotationY+=o:e.rotationY<s.rotationY&&(s.rotationY-=o)),Math.abs(e.rotationZ-s.rotationZ)>t&&(e.rotationZ>s.rotationZ?s.rotationZ+=o:e.rotationZ<s.rotationZ&&(s.rotationZ-=o)));const p=1e3*(r.duration??3);if(p<=0)return r.position&&this.camera.position.set(s.positionX,s.positionY,s.positionZ),r.rotation&&this.camera.rotation.set(s.rotationX,s.rotationY,s.rotationZ),this.camera.matrixWorldNeedsUpdate=!0,void("function"==typeof r.complete&&r.complete(this));const h=r.easing??a.Easing.Linear.None,c=1e3*(r.delay??0);this._flightTween=new a.Tween(e).to(s,p).easing(h).delay(c).onUpdate((()=>{r.position&&this.camera.position.set(e.positionX,e.positionY,e.positionZ),r.rotation&&this.camera.rotation.set(e.rotationX,e.rotationY,e.rotationZ),this.camera.matrixWorldNeedsUpdate=!0,"function"==typeof r.update&&r.update(this)})).onComplete((()=>{delete this._flightTween,"function"==typeof r.complete&&r.complete(this)})).start()}setView(t={}){t.duration=0,this.flyTo(t)}}}export{n as default};
